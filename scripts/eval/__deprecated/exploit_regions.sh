#!/bin/bash

# settings
##########
local_root_folder="$HOME/ISPD22"
round="alpha"
benchmarks_10_metal_layers="AES_1 AES_2 AES_3"
benchmarks_6_metal_layers="Camellia CAST MISTY PRESENT"
benchmarks="$benchmarks_10_metal_layers $benchmarks_6_metal_layers"
scripts="exploit_eval.tcl exploit_eval_metal1--metal6.tcl exploit_regions.tcl exploit_regions_metal1--metal6.tcl design_cost.sh post_process_exploit_regions.sh"
##########

work_folder="$local_root_folder/benchmarks/__release/__$round"
scripts_folder="$local_root_folder/scripts/eval"

echo "1) Clean and initialize the following folders ..."
echo "1)  $work_folder"
echo "1)  $scripts_folder"

	cd $scripts_folder;
	git pull
	git checkout .

	cd $work_folder;
	cd ../
	rm -rf __$round;
	git pull
	git checkout .

	for benchmark in $benchmarks; do

		cd $work_folder/$benchmark

		for script in $scripts; do
			ln -sf $scripts_folder/$script .
		done
	done

echo "1) Done"
echo ""

echo "2) Run baseline evaluations ..."

	for benchmark in $benchmarks; do

		echo "2a)  Run Innovus scripts for benchmark \"$benchmark\" ..."

		## start frame of code to be run in parallel
		## https://unix.stackexchange.com/a/103921
		(
			cd $work_folder/$benchmark

			if [[ "$benchmarks_10_metal_layers" == *"$benchmark"* ]]; then
				echo "2a)   Run script version considering 10 metal layers..."
				/opt/cadence/installs/INNOVUS181/bin/innovus -stylus -files exploit_eval.tcl -log exploit_eval
			elif [[ "$benchmarks_6_metal_layers" == *"$benchmark"* ]]; then
				echo "2a)   Run script version considering 6 metal layers..."
				/opt/cadence/installs/INNOVUS181/bin/innovus -stylus -files exploit_eval_metal1--metal6.tcl -log exploit_eval
			else
				echo "2a)   Error: benchmark cannot be matched to some script version; exiting..."
			fi
			./design_cost.sh
			./post_process_exploit_regions.sh
			mv *.rpt* reports/

		## end frame of code to be run in parallel
		) &
	done
	# wait until parallel runs are done
	wait

	for benchmark in $benchmarks; do

		echo "2b)  Run gnuplot scripts for benchmark \"$benchmark\" ..."

		cd $work_folder/$benchmark/snapshots

		# NOTE already parallelized; running further in parallel here kicks in fork warnings about not enough child resources
		./gnuplot_exploit_regions.sh
	done

echo "2) Done"
echo ""

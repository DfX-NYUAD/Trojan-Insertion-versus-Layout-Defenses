
## misc key parameters
##
round="alpha"
## work mode
mode="testing"
## wait time b/w cycles [s]
check_interval="60"
## max runs allowed in parallel per team
max_parallel_runs="6"
## max uploads allowed to be started in parallel; based on experience of load behaviour w/ Google drive
max_parallel_uploads="10"
## margin/tolerance for soft constraints to be classified as errors
issues_margin="10"

## folders
##
google_root_folder="1G1EENqSquzCQbxI1Ij-4vbD8C3yrC_FF"
google_json_file="$HOME/.config/gdrive/USERNAME_v2.json"
local_root_folder="$HOME/nyu_projects/ISPD23"
tmp_root_folder="$local_root_folder/data/tmp/"
teams_root_folder="$local_root_folder/data/$round"
scripts_folder="$local_root_folder/scripts/eval"
baselines_root_folder="$local_root_folder/benchmarks/_release/_$round"

## library files
##
## NOTE no need to specificy separately; all files in $bench/ASAP7 folder are considered automatically
#lib_files="asap7sc7p5t_AO_LVT_TT_nldm_211120.lib asap7sc7p5t_AO_SLVT_TT_nldm_211120.lib asap7sc7p5t_INVBUF_LVT_TT_nldm_220122.lib asap7sc7p5t_INVBUF_SLVT_TT_nldm_220122.lib asap7sc7p5t_OA_LVT_TT_nldm_211120.lib asap7sc7p5t_OA_SLVT_TT_nldm_211120.lib asap7sc7p5t_SEQ_LVT_TT_nldm_220123.lib asap7sc7p5t_SEQ_SLVT_TT_nldm_220123.lib asap7sc7p5t_SIMPLE_LVT_TT_nldm_211120.lib asap7sc7p5t_SIMPLE_SLVT_TT_nldm_211120.lib"
#lef_files="asap7_tech_4x_201209.lef asap7sc7p5t_28_L_4x_220121a.lef asap7sc7p5t_28_R_4x_220121a.lef asap7sc7p5t_28_SL_4x_220121a.lef"
#qrc_file="qrcTechFile_typ03_scaled4xV06"

## benchmarks
##
benchmarks="aes camellia cast misty seed sha256"
## NOTE use this for testing
#benchmarks="aes"
## NOTE will be set automatically via initialize()
benchmarks_string_max_length="0"
teams_string_max_length="0"

## emails
##
## NOTE use pipe as separator!
## NOTE at least one email must be given (otherwise grep -Ev used below will exclude all)
emails_excluded_for_notification="ispd23contest.drive@gmail.com"

## Innovus
##
# NOTE as above, use pipe as separate and provide at least one term
innovus_errors_for_checking="ERROR|StackTrace|INTERRUPT"
# NOTE as above, use pipe as separate and provide at least one term
# NOTE 'IMPOAX' errors are related to OA loading, which is no reason to kill; OA is not used
# NOTE 'IMPEXT' errors are related to LEF/DEF parsing and DRCs, which is no reason to kill; should be reported as error though for design checks
# NOTE 'IMPPP' errors are related to the check_design command, which is no reason to kill; should be reported as error though for design checks
# NOTE '@file' lines source the tcl file that is executed, both commands as well as comments; shouldn't be checked
# since comments can contain keywords like ERROR etc -- could be dropped now that CDS_STYLUS_SOURCE_VERBOSE=0 is used
innovus_errors_excluded_for_checking="IMPOAX|IMPEXT|IMPPP|@file"
#
## NOTE use to disable verbose copying of script commands and comments into log file
#export CDS_STYLUS_SOURCE_VERBOSE=0

## LEC
##
# NOTE as above, use pipe as separate and provide at least one term
lec_errors_for_checking="Error|StackTrace|License check failed!"

## benchmarks and file handlers
##
## NOTE only to be changed if you know what you're doing
scripts_sec_first_order="exploitable_regions.bin exploitable_regions.tcl"
scripts_des="check.tcl mmmc.tcl lec.do design_cost.sh scores.sh check_pins.sh check_pg.sh pg.tcl pg_procedures.tcl summarize_assets.tcl"
scripts_des="check.tcl mmmc.tcl lec.do scores.sh"
scripts="$scripts_sec_first_order $scripts_des"

## main data structures

# key: Google ID; value: team name
declare -A google_team_folders

# key: internal id; value: Google ID
# syntax for key: team---benchmark
declare -A google_benchmark_folders

# key: team name; value: emails of all accounts having shared access to the team folder
declare -A google_share_emails

# key: internal id; value: queued runs
# syntax for key: team---benchmark
declare -A runs_queued

####
#
# Script for ISPD'23 contest. Johann Knechtel, NYUAD
#
####

## misc key parameters
##
round="final"
## work mode
mode="production"
## dbg for files: arranges results files differently, such that more details for ECO TI are uploaded to the Drive
dbg_files="1"
## wait time b/w cycles [s]
check_interval="60"
## max runs allowed in parallel per team
# TODO set to 1--4 for production
max_parallel_runs="4"
## max uploads allowed to be started in parallel; based on experience of load behaviour w/ Google drive
max_parallel_uploads="10"
## margin/tolerance for soft constraints to be classified as errors
issues_margin="10"

## folders, files
##
google_root_folder="1G1EENqSquzCQbxI1Ij-4vbD8C3yrC_FF"
google_json_file="$HOME/.config/gdrive/USERNAME_v2.json"
local_root_folder="/data/nyu_projects/ISPD23_prod"
tmp_root_folder="$local_root_folder/data/tmp/"
teams_root_folder="$local_root_folder/data/$round"
eval_scripts_folder="$local_root_folder/scripts/eval"
baselines_root_folder="$local_root_folder/benchmarks/_release/_$round"
# NOTE refer to this file; https://stackoverflow.com/a/246128
daemon_settings_file="$(cd -P "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
daemon_settings_file+="/ISPD23_daemon.settings"

## benchmarks
##
benchmarks="camellia cast misty seed sha256 aes"
## NOTE use this for testing
#benchmarks="aes"
## NOTE will be set automatically via initialize()
benchmarks_string_max_length="0"
teams_string_max_length="0"

## emails
##
## NOTE use pipe as separator!
## NOTE at least one email must be given (otherwise grep -Ev used below will exclude all)
emails_excluded_for_notification="ispd23contest.drive@gmail.com"

## Innovus
##
inv_call="innovus -nowin -wait 120 -files"
# NOTE as above, use pipe as separate and provide at least one term
# NOTE generic ones
innovus_errors_for_checking="ERROR|StackTrace|INTERRUPT"
# NOTE specific ones
innovus_errors_for_checking+="|NRDB-955" # errors are related to conflict of existing routes below the bottom layer. Since the default setting is "-routeBottomRoutingLayer 2" this
# means there are routes in M1. But, we don't want to allow routing in M1 as that makes ECO TI fail.
# NOTE as above, use pipe as separate and provide at least one term
# NOTE 'IMPOAX' errors are related to OA loading, which is no reason to kill; OA is not used
# NOTE 'IMPEXT' errors are related to LEF/DEF parsing and DRCs, which is no reason to kill; should be reported as error though for design checks
# NOTE 'IMPPP' errors are related to the check_design command, which is no reason to kill; should be reported as error though for design checks
# NOTE '@file' lines appear in Stylus mode, and are sourced from the tcl file that is executed, both commands as well as comments; shouldn't be checked since comments can contain
# keywords like ERROR etc
# NOTE 'IMPLIC-104' and 'IMPVL-909' errors are both related to license limitations, namely that flattening of designs w/ >50k instances fails (but designs w/ <=50k instances still
# go through); shouldn't be checked, to enable error handling to consider this as interrupt, runtime error
# NOTE 'IMPFP-735' errors are related to nets not found when loading the design db; can be ignored
innovus_errors_excluded_for_checking="IMPOAX|IMPEXT|IMPPP|@file|IMPLIC-104|IMPVL-909|IMPFP-735"
## NOTE use to disable verbose copying of script commands and comments into log file
## NOTE deprecated; turned off to enable better insights for teams as to which command is run at what point
#export CDS_STYLUS_SOURCE_VERBOSE=0

## LEC
##
lec_call="lec_64 -nogui -xl -dofile"
# NOTE as above, use pipe as separate and provide at least one term
lec_errors_for_checking="Error|StackTrace|License check failed!"

## benchmarks and file handlers
##
## NOTE only to be changed if you know what you're doing
## NOTE use '/*' to capture all scripts in one folder
scripts_sec="sec/1st_order/exploitable_regions.* sec/ECO_TI/*"
scripts_des="des/*.tcl"
scripts_checks="checks/*"
scripts_others="scores/scores.sh"
scripts="$scripts_sec $scripts_des $scripts_checks $scripts_others"

## main data structures

# key: Google ID; value: team name
declare -A google_team_folders

# key: internal id; value: Google ID
# syntax for key: team---benchmark
declare -A google_benchmark_folders

# key: team name; value: emails of all accounts having shared access to the team folder
declare -A google_share_emails

# key: internal id; value: queued runs
# syntax for key: team---benchmark
declare -A runs_queued
